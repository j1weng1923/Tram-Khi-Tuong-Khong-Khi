#include <WiFi.h>
#include <HTTPClient.h>
#include "DHT.h"

// ==== C·∫•u h√¨nh WiFi ====
const char* ssid = "HQQ";
const char* password = "223035df";

// ==== C·∫•u h√¨nh c·∫£m bi·∫øn ====
#define DHTPIN 15         // Ch√¢n OUT c·ªßa DHT22 n·ªëi GPIO15
#define DHTTYPE DHT22     // ‚úÖ ƒê√∫ng lo·∫°i c·∫£m bi·∫øn
#define MQ135PIN 36       // MQ135 n·ªëi ch√¢n AO v√†o GPIO36 (VP)

DHT dht(DHTPIN, DHTTYPE);

// ==== ƒê·ªãa ch·ªâ server Flask ====
const char* serverURL = "http://192.168.1.10:5000/airquality";

void setup() {
  Serial.begin(115200);
  dht.begin();

  WiFi.begin(ssid, password);
  Serial.print("ƒêang k·∫øt n·ªëi WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\n‚úÖ K·∫øt n·ªëi WiFi th√†nh c√¥ng!");
}

void loop() {
  float temperature = dht.readTemperature(); // ¬∞C
  float humidity = dht.readHumidity();
  int gas = analogRead(MQ135PIN);           // Gi√° tr·ªã ADC MQ135

  // Ki·ªÉm tra l·ªói khi ƒë·ªçc
  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("‚ö†Ô∏è Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c d·ªØ li·ªáu t·ª´ DHT22!");
    delay(5000);
    return;
  }

  // L·ªçc d·ªØ li·ªáu kh√¥ng h·ª£p l√Ω
  if (temperature < -20 || temperature > 60 || humidity < 0 || humidity > 100) {
    Serial.print("‚ö†Ô∏è Gi√° tr·ªã b·∫•t th∆∞·ªùng: ");
    Serial.print("Nhi·ªát ƒë·ªô: "); Serial.print(temperature);
    Serial.print(" ¬∞C | ƒê·ªô ·∫©m: "); Serial.println(humidity);
    delay(5000);
    return;
  }

  Serial.print("üì§ ƒêang g·ª≠i: ");
  Serial.print(temperature); Serial.print(" ¬∞C | ");
  Serial.print(humidity); Serial.print(" % | ");
  Serial.print("Gas: "); Serial.println(gas);

  if (WiFi.status() == WL_CONNECTED) {
    WiFiClient client;
    HTTPClient http;

    http.begin(client, serverURL);
    http.addHeader("Content-Type", "application/json");

    String payload = "{";
    payload += "\"temperature\":" + String(temperature, 1) + ",";
    payload += "\"humidity\":" + String(humidity, 1) + ",";
    payload += "\"gas\":" + String(gas);
    payload += "}";

    int httpResponseCode = http.POST(payload);
    if (httpResponseCode > 0) {
      Serial.print("‚úÖ G·ª≠i th√†nh c√¥ng! Ph·∫£n h·ªìi: ");
      Serial.println(httpResponseCode);
    } else {
      Serial.print("‚ùå G·ª≠i th·∫•t b·∫°i! M√£ l·ªói: ");
      Serial.println(httpResponseCode);
    }

    http.end();
  } else {
    Serial.println("üö´ M·∫•t k·∫øt n·ªëi WiFi");
  }

  delay(10000); // G·ª≠i m·ªói 10 gi√¢y
}
